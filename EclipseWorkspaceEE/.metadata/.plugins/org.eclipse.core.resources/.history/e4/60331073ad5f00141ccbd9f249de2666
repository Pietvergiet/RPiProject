import java.lang.reflect.Array;
import java.util.Arrays;

import Gpio.GPIO;


public class RandomZooi {
	public static void main(String[] arg) {
		boolean input[] = doe(255);
		System.out.println(Arrays.toString(doe(64)));
		int n = 0;
		for (int i = 0; i < 8; ++i) {
		    n = (n << 1) + (input[i] ? 1 : 0);
		}
		System.out.println(n);
		
		char a = (char) 65;
		char b = (char) 66;
		char c = (char) 67;
		char d = (char) 68;
		StringBuilder string = new StringBuilder();
		string.append("@");
		string.append(a);
		string.append(d);
		string.append(c);
		string.append(b);

		int hallo[] = turnStringtoInt("@");
		System.out.println(Arrays.toString(hallo) +" " + (int) string.charAt(0) + string);
		
		System.out.println("Input --> " + getIntInput());
		
		System.out.println(Arrays.toString(timeToBool(1, 4)));
		System.out.println(getIntInput(timeToBool(11, 30)));
	}
	
	public static int[] turnStringtoInt(String string) {
		StringBuilder chars = new StringBuilder(string);
		int[] ints = new int[chars.length()];
		for (int i = 0; i < chars.length(); i++) {
			ints[i] = (int) chars.charAt(i);
		}
		
		return ints;
	}
	
	public static boolean[] doe(int arg) {
		int input = arg;

	    boolean[] bits = new boolean[8];
	    for (int i = 7; i >= 0; i--) {
	        bits[i] = (input & (1 << i)) != 0;
	    }
	    
	    return bits;
	}
	
	public static int getIntInput() {
		boolean input[] = {true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true};
		int n = 0;
		for (int i = 0; i < 16; ++i) {
		    n = (n << 1) + (input[i] ? 1 : 0);
		}
		return n;
	}
	
	public static int getIntInput(boolean[] s) {
		boolean input[] = s;
		int n = 0;
		for (int i = 0; i < 16; ++i) {
		    n = (n << 1) + (input[i] ? 1 : 0);
		}
		return n;
	}
	
	public static boolean[] timeToBool(int hour, int min) {
		int totalMin = hour*60 + min;
		System.out.println(totalMin);
		boolean[] bits = new boolean[16];
	    for (int i = 0; i > 16; i++) {
	        bits[i] = (totalMin & (1 << i)) != 0;
	    }
	    
	    return bits;
	}
}
